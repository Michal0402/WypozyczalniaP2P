@model WypozyczalniaP2P.Models.Wypozyczenie

@{
    var samochod = ViewBag.Samochod as WypozyczalniaP2P.Models.Samochod;
}

<h1>Wypożycz: @samochod.Marka @samochod.Model</h1>

<div id="calendar" style="max-width: 600px; margin: 20px auto; font-size: 12px;"></div>

<div asp-validation-summary="All" class="text-danger"></div>

<form asp-action="WypozyczSamochod" method="post" class="form-container">
    <input type="hidden" asp-for="SamochodId" />
    <input type="hidden" asp-for="KlientId" />
    <input type="hidden" asp-for="WypozyczajacyId" />

    <div class="form-group">
        <label class="control-label">Samochód</label>
        <input class="form-control" value="@samochod.Marka @samochod.Model" readonly />
    </div>
    <div class="form-group">
        <label class="control-label">Klient</label>
        <input class="form-control" value="@User.Identity.Name" readonly />
    </div>
    <div class="form-group">
        <label class="control-label">Wypożyczający</label>
        <input class="form-control" value="@samochod.Wlasciciel?.Email" readonly />
    </div>
    <div class="form-group">
        <label asp-for="DataRozpoczecia" class="control-label">Od</label>
        <input asp-for="DataRozpoczecia" id="DataRozpoczecia" class="form-control" type="date" />
        <span asp-validation-for="DataRozpoczecia" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DataZakonczenia" class="control-label">Do</label>
        <input asp-for="DataZakonczenia" id="DataZakonczenia" class="form-control" type="date" />
        <span asp-validation-for="DataZakonczenia" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Wypożycz" class="btn btn-primary" />
        <a asp-action="WybierzSamochod" asp-controller="Wypozyczenie" class="btn btn-secondary">Wróć</a>
    </div>
</form>

<style>
    .form-container {
        max-width: 600px;
        margin: 20px auto;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        font-size: 14px;
    }

    .btn {
        margin-right: 10px;
    }

    #calendar .fc-daygrid-day {
        height: 50px; /* Zmniejsz wysokość dni */
    }

        #calendar .fc-daygrid-day.fc-day-past {
            background-color: #f0f0f0; /* Szare tło dla dni wstecz */
        }

        #calendar .fc-daygrid-day:not(.fc-day-disabled) {
            background-color: #e6ffe6; /* Zielone tło dla wolnych dni */
        }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.17/index.global.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var carId = @Model.SamochodId;
            var calendarEl = document.getElementById('calendar');

            if (!calendarEl) {
                console.error('Element kalendarza nie został znaleziony!');
                return;
            }

            fetch('/Wypozyczenie/GetOccupiedDates?carId=' + carId)
                .then(response => {
                    if (!response.ok) throw new Error('Błąd sieci: ' + response.statusText);
                    return response.json();
                })
                .then(data => {
                    var calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'dayGridMonth',
                        height: 'auto', // Automatyczna wysokość
                        events: data.map(event => ({
                            start: event.start,
                            end: event.end,
                            backgroundColor: 'red', // Zajęte na czerwono
                            borderColor: 'red',
                            display: 'background'
                        })),
                        validRange: {
                            start: new Date().toISOString().split('T')[0] // Blokuje daty wstecz
                        },
                        selectable: true,
                        select: function (info) {
                            var startDate = info.startStr;
                            var endDate = info.endStr;
                            document.getElementById('DataRozpoczecia').value = startDate;
                            // Odejmujemy 1 dzień od daty końca, bo FullCalendar wybiera dzień po końcu zakresu
                            var adjustedEndDate = new Date(info.end);
                            adjustedEndDate.setDate(adjustedEndDate.getDate() - 1);
                            document.getElementById('DataZakonczenia').value = adjustedEndDate.toISOString().split('T')[0];
                        },
                        dateClick: function (info) {
                            var selectedDate = info.dateStr;
                            if (selectedDate >= new Date().toISOString().split('T')[0]) {
                                document.getElementById('DataRozpoczecia').value = selectedDate;
                                document.getElementById('DataZakonczenia').value = ''; // Reset daty końca
                            }
                        }
                    });
                    calendar.render();
                })
                .catch(error => {
                    console.error('Błąd ładowania danych kalendarza:', error);
                });
        });
    </script>
}